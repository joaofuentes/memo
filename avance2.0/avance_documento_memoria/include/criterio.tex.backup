\chapter{Capítulo 4}

\section{Criterio de Selección}

El criterio de selección de tecnologías a utilizar, es un punto de importancia no menor en 
el desarrollo de esta memoria, pués consta de la combinación de una serie de herramientas que, 
dependiendo de cuáles y cómo se combinen, puede repercutir de manera positiva o negativa, el 
rendimiento del sistema y por lo tanto los resultados de las pruebas a realizar.\\

Para simplificar la tarea, se ha divido la selección en 2 items:
\begin{enumerate}
 \item Tecnologías tradicionales.
 \item Tecnologías emergentes.
\end{enumerate}

Dentro de cada item se utiliza la siguiente subdivisión:
\begin{itemize}
 \item Gestor de Base de Datos.
 \item Servidor Web.
 \item Lenguaje de programación Web y uso de Framework.
\end{itemize}



\subsection{Tecnologías Tradicionales}

Para la combinación de tecnologías tradicionales se utilizará:
\begin{itemize}
 \item Gestor de Base de Datos MySQL 5.5
 \item Servidor Web Apache
 \item Lenguaje de Programación PHP y Framework Symfony2\footnote{http://symfony.com/} o CakePHP2\footnote{http://cakephp.org/}
\end{itemize}

Esta elección está basaba en la gran popularidad que duró más de una decada, conviertiendose 
en practicamente una combinación estándar durante la web 2.0. \\

La razón de utilizar una combinación de carácter relativamente\footnote{Si bien el servidor, y el lenguaje 
de programación son tradicionales, se utilizan versiones actualizadas, tanto de motor de base de datos y de 
frameworks.} más tradicional, es la de tener una base de comparación respecto a las tecnologías relativamente 
recientes, y de acuerdo a los posibles resultados de las pruebas a realizar, determinar si las diferencias 
en cuanto a rendimiento son lo suficientemente altas (o bajas), para justificar tener (o no tener) que 
migrar sistemas y aplicaciones completas.\\


\subsubsection{Por qué PHP}
\textit{Buscar más información, mas orientada al rendimiento.}

%Explicar el porque

\subsubsection{¿Symfony2 o CakePHP2?}

La cantidad de frameworks que existen para PHP es bastante grande, es por ello que su elección no es un
tema sencillo de resolver.\\

Si bien en un princio, la elección tomó en cuenta más de dos variables, la desición se acotó a los más
populares dentro de la web. Sin embargo, no hay consenso en los foros y ambos reciben tanto críticas como 
puntos a favor, por parte de los usuarios.\\

Es por ello que se realizará una instalación de ambos y se correran ciertas pruebas preliminares, para eliminar
todo rastro de dudas. No obstante, a continuación  se expondrá información de ambos:

\begin{itemize}
 \item Symfony: %llenar
 \item CakePHP: %llenar
\end{itemize}

En [42] hay una buena comparativa (del 2007), en la que a grandes rasgos se concluye que:\\
%cake es mas facil de instalar, pero symfony puede que tenga mejor performance 
En [43] hay una cmparativa entre cake 2.1.3, symfony 2.1.2 y Yii, en el que cake supera a symfony (usando siege)\\

En [44] hay info entre ambos framworks (vschart), una especie de wiki.\\

En http://bakery.cakephp.org/articles/view/4cb4609b-1154-4fc8-8275-49e1d13e7814/lang:spa (hora de consulta 1604 13-08-2013)
se habla de una prueba en la que ambos son relati
\textit{Buscar más información}

\subsection{Tecnologías Emergentes}

Para la combinación de tecnologías emergentes se utilizará:

\begin{itemize}
 \item Gestor de Base de Datos SQL
 \item Servidor Web Nodejs
 \item Lenguaje de Programación Javascript y Framework Express \footnote{http://expressjs.com/}
\end{itemize}

%Explicar el porque de la elección.
La razón para elegir esta combinación, radica principalmente en el hecho de poder utilizar
un lenguaje único, tanto para el servidor web como para desarrollar la aplicación web en sí.\\




%porque nodejs
\subsubsection{¿Por qué Nodejs?}

Nodejs consiste en un framework de Javascript basado en el motor V8.\\

La meta número uno declarada de Node es \textit{proporcionar una manera fácil para construir 
programas de red escalables}. ¿Cuál es el problema con los programas de servidor actuales? 
En lenguajes como Java y PHP, cada conexión genera un nuevo \textit{thread} que potencialmente viene 
acompañado de 2 MB de memoria. En un sistema que tiene 8 GB de RAM, esto da un número máximo teórico 
de conexiones concurrentes de cerca de 4.000 usuarios.\\

Bajo el supuesto de que el impacto de una empresa ficticia es tal que crece la base de clientes, se desea 
que la aplicación soporte más y más usuarios, por lo tanto es necesario agregar más y más servidores.
Lo que representa una suma en cuanto a costos de servidor, tráfico, y por lo tanto potenciales
problemas técnicos: un usuario puede estar usando diferentes servidores para cada solicitud, así que cualquier 
recurso compartido debe almacenarse en todos los servidores. Por todas estas razones, el cuello de botella en 
toda la arquitectura de aplicación Web (incluyendo el rendimiento del tráfico, la velocidad de procesador y la 
velocidad de memoria) corresponde al número máximo de conexiones concurrentes que puede manejar un servidor.\\

Node resuelve este problema cambiando la forma en que se realiza una conexión con el servidor. En lugar de 
generar un nuevo hilo de SO\footnote{Sistema Operativo} para cada conexión y de asignarle la memoria necesaria, 
cada conexión dispara una ejecución de evento dentro del proceso del motor de Node.\\

Corre en la máquina virtual de javascript de google conocida como v8 y se basa en el paradigma
de programación dirigido a eventos de entrada y salida asincrónica.\\
%agregar imagen
%\includegraphics[]{×}

Una importante característica es que puede levantar servidores web en casi cualquier puerto que se 
le indique, además de posibilitar la comunicación única bidirideccional entre el cliente y el servidor[4],
mediante el uso de sockets o bien llamadas de tipo comet [19] \footnote{Una llamada de tipo comet 
permite a un servidor web enviar información al navegador web si que este se lo pida explicitamente.}.

%http://book.mixu.net/ch13.html

De la misma forma que ocurre al trabajar con Apache, es posible expandir la funcionalidad de Node 
instalando módulos. Los módulos que se pueden utilizar con Node mejoran en gran medida el producto.
Así de importantes se han tornado los módulos, hasta el punto de convertirse en parte esencial del 
producto completo [10]. Los módulos se instalan usando Node Package Manager.\\

En lo que a plataformas se refiere y de acuerdo a la página oficial [17], están habilitadas las 
descargas para:
\begin{itemize}
 \item Windows
 \item Mac OS X
 \item Linux
 \item SunOS
\end{itemize}


\subsubsection{La lucha entre Django y Rails}

Similar a lo que ocurre con los frameworks para PHP, es lo que acontece con Django y Rails, a pesar
de que ambos no comparten un lenguaje en común (Python y Ruby respectivamente).\\

Esta pregunta es, relamente, Python vs Ruby y

 this is really a Python vs Ruby question, not Django vs Rails. And, as can be gathered from the other answers 
 to this question, there is no clear winner. Both are good, modern, well-designed, flexible, good for your
 productivity (unlike PHP which fails on all these counts). So choosing between the two really boils down to
 a fit between your personality/preferences and the language strengths.
\subsubsection{¿Por qué SQL en lugar de NoSQL?}
%Parrafo que explique el uso de sql
No se utiliza un gestor de Base de Datos NoSQL, ya que el objetivo es medir el comportamiento de
la combinación de servidor web y lenguaje de programación, medir cómo manejan los accesos a la base 
de datos en igualdad de condiciones.\\
\newpage


%agregar al menos una combinacion más, con django y/o RoR
